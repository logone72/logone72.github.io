import{_ as a,c as e,o as s,N as n}from"./chunks/framework.820fbdb1.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"원문","slug":"원문","link":"#원문","children":[]}],"relativePath":"개발/git/git-clear-all-local-branches.md"}'),t={name:"개발/git/git-clear-all-local-branches.md"},o=n(`<p>로컬 브렌치 중 더이상 remote에 존재하지 않는 브랜치를 삭제하는 명령어입니다.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">git fetch -p &amp;&amp; for branch in $(git for-each-ref --format &#39;%(refname) %(upstream:track)&#39; refs/heads | awk &#39;$2 == &quot;[gone]&quot; {sub(&quot;refs/heads/&quot;, &quot;&quot;, $1); print $1}&#39;); do git branch -D $branch; done</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="원문" tabindex="-1">원문 <a class="header-anchor" href="#원문" aria-hidden="true">#</a></h2><p><a href="https://stackoverflow.com/posts/33548037/timeline" target="_blank" rel="noreferrer">링크</a></p><p>The safest way to do this is to use the &quot;plumbing&quot; command <code>git for-each-ref</code> with the interpolation variable <code>%(upstream:track)</code>, which will be <code>[gone]</code> when the branch is no longer on the remote:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">git fetch -p &amp;&amp; for branch in $(git for-each-ref --format &#39;%(refname) %(upstream:track)&#39; refs/heads | awk &#39;$2 == &quot;[gone]&quot; {sub(&quot;refs/heads/&quot;, &quot;&quot;, $1); print $1}&#39;); do git branch -D $branch; done</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>This approach is somewhat safer than using the &quot;porcelain&quot; command, because there is no risk of accidentally matching on part of the commit message. Here is a version using the &quot;porcelain&quot; git commands:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">git fetch -p &amp;&amp; for branch in $(git branch -vv | grep &#39;: gone]&#39; | awk &#39;{print $1}&#39;); do git branch -D $branch; done</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>The way this works is that after the command</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">git fetch -p</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>removes the remote references, when you run</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">git branch -vv</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>it will show &#39;gone&#39; as the remote status. For example,</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">$ git branch -vv</span></span>
<span class="line"><span style="color:#A6ACCD;">  master                 b900de9 [origin/master: behind 4] Fixed bug</span></span>
<span class="line"><span style="color:#A6ACCD;">  release/v3.8           fdd2f4e [origin/release/v3.8: behind 2] Fixed bug</span></span>
<span class="line"><span style="color:#A6ACCD;">  release/v3.9           0d680d0 [origin/release/v3.9: behind 2] Updated comments</span></span>
<span class="line"><span style="color:#A6ACCD;">  bug/1234               57379e4 [origin/bug/1234: gone] Fixed bug</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>This is what the scripts iterate over.</p>`,15),l=[o];function p(i,c,r,h,d,g){return s(),e("div",null,l)}const b=a(t,[["render",p]]);export{m as __pageData,b as default};
