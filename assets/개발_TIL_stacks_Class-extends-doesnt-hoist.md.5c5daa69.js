import{_ as s,c as n,o as e,N as o}from"./chunks/framework.820fbdb1.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"개발/TIL/stacks/Class-extends-doesnt-hoist.md"}'),a={name:"개발/TIL/stacks/Class-extends-doesnt-hoist.md"},t=o('<p>class 작업 중 아래와 같은 오류를 만났다.</p><blockquote><p>Uncaught TypeError: Super expression must either be null or a function, not undefined</p></blockquote><p>위 오류는 아래와 같은 경우에서 발생한다.</p><p><em>상속 받으려는 상위 클래스가 존재하지 않는 경우</em> <a href="https://stackoverflow.com/questions/30116430/reactjs-giving-error-uncaught-typeerror-super-expression-must-either-be-null-or" target="_blank" rel="noreferrer">출처</a></p><div class="language-markdown"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">This means that you want subclass something, which should be </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">Class</span><span style="color:#89DDFF;">`</span><span style="color:#A6ACCD;">, but is </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">undefined</span><span style="color:#89DDFF;">`</span><span style="color:#A6ACCD;">. The reasons might be:</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">   typo in </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">Class extends ...</span><span style="color:#89DDFF;">`</span><span style="color:#A6ACCD;">, so you extending undefined variable</span></span>\n<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">   typo in </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">import ... from</span><span style="color:#89DDFF;">`</span><span style="color:#A6ACCD;">, so you import </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">undefined</span><span style="color:#89DDFF;">`</span><span style="color:#A6ACCD;"> from module</span></span>\n<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">   referenced module does not contain the value, you want import (e.g. obsolete module - case with React), so you importing non existing value (</span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">undefined</span><span style="color:#89DDFF;">`</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">   typo in referenced module </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">export ...</span><span style="color:#89DDFF;">`</span><span style="color:#A6ACCD;"> statement, so it exports undefined variable</span></span>\n<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">   referenced module missing </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">export</span><span style="color:#89DDFF;">`</span><span style="color:#A6ACCD;"> statement at all, so it exports just </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">undefined</span><span style="color:#89DDFF;">`</span></span>\n<span class="line"></span></code></pre></div><blockquote><p>추가적으로 순환 참조에 의해 발생하기도 한다 <a href="https://velog.io/@ooooorobo/Uncaught-TypeError-Super-expression-must-either-be-null-or-a-function" target="_blank" rel="noreferrer">출처</a></p></blockquote><p>나의 경우, 상속받으려는 상위 클래스가 상속을 받는 하위 클래스보다 아래 선언 되어 있어서, 호이스팅으로 선언은 되어있었지만, 초기화 되어있지 않아서 발생했다.</p>',7),l=[t];function p(r,c,i,D,y,d){return e(),n("div",null,l)}const F=s(a,[["render",p]]);export{C as __pageData,F as default};
