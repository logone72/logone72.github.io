import{_ as s,c as a,o as l,N as e}from"./chunks/framework.820fbdb1.js";const D=JSON.parse('{"title":"개요","description":"","frontmatter":{},"headers":[{"level":3,"title":"링크","slug":"링크","link":"#링크","children":[]},{"level":2,"title":"시작","slug":"시작","link":"#시작","children":[]},{"level":2,"title":"Controller","slug":"controller","link":"#controller","children":[{"level":3,"title":"시작","slug":"시작-1","link":"#시작-1","children":[]},{"level":3,"title":"역할","slug":"역할","link":"#역할","children":[]}]},{"level":2,"title":"Model","slug":"model","link":"#model","children":[{"level":3,"title":"역할","slug":"역할-1","link":"#역할-1","children":[]}]},{"level":2,"title":"View","slug":"view","link":"#view","children":[{"level":3,"title":"역할","slug":"역할-2","link":"#역할-2","children":[]}]},{"level":2,"title":"신규 페이지 생성시 기본적으로 들어가는 요소들","slug":"신규-페이지-생성시-기본적으로-들어가는-요소들","link":"#신규-페이지-생성시-기본적으로-들어가는-요소들","children":[]}],"relativePath":"개발/MVC-아키텍쳐.md"}'),n={name:"개발/MVC-아키텍쳐.md"},o=e(`<h1 id="개요" tabindex="-1">개요 <a class="header-anchor" href="#개요" aria-hidden="true">#</a></h1><p>코드 작성시, 관심사 분리가 되도록 MVC 아키텍쳐를 조사</p><h3 id="링크" tabindex="-1">링크 <a class="header-anchor" href="#링크" aria-hidden="true">#</a></h3><p><a href="https://www.taniarascia.com/javascript-mvc-todo-app/" target="_blank" rel="noreferrer">Tania Rascia의 JS MVC 패턴 적용 - 설명</a><a href="https://github.com/taniarascia/mvc/blob/master/script.js" target="_blank" rel="noreferrer">Tania Rascia의 JS MVC 패턴 적용 - 예시</a></p><p><a href="https://alistapart.com/article/javascript-mvc/" target="_blank" rel="noreferrer">https://alistapart.com/article/javascript-mvc/</a></p><h1 id="mvc" tabindex="-1">MVC <a class="header-anchor" href="#mvc" aria-hidden="true">#</a></h1><h2 id="시작" tabindex="-1">시작 <a class="header-anchor" href="#시작" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Model</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">View</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Controller</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">model</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">view</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">model</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">model</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">view</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">view</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> app </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Controller</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Model</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">View</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"></span></code></pre></div><h2 id="controller" tabindex="-1">Controller <a class="header-anchor" href="#controller" aria-hidden="true">#</a></h2><h3 id="시작-1" tabindex="-1">시작 <a class="header-anchor" href="#시작-1" aria-hidden="true">#</a></h3><ol><li>model, view class 생성</li><li>handler 등록 - view binder</li><li>callback 등록 - model binder</li><li>document ready 시 초기화 실행. (init)</li></ol><h3 id="역할" tabindex="-1">역할 <a class="header-anchor" href="#역할" aria-hidden="true">#</a></h3><ol><li>modal 과 view 연결</li></ol><blockquote><p>The controller is the <strong>link</strong> between the <strong>model</strong> (the data ) and the <strong>view</strong> (what the user sees).</p></blockquote><h2 id="model" tabindex="-1">Model <a class="header-anchor" href="#model" aria-hidden="true">#</a></h2><h3 id="역할-1" tabindex="-1">역할 <a class="header-anchor" href="#역할-1" aria-hidden="true">#</a></h3><ol><li>데이터 관리</li><li>서버 통신 <ol><li>controller가 서버 응답 후 callback 등록할 수 있게 해주는 binder</li></ol></li></ol><blockquote><p>It doesn&#39;t involve any events or DOM manipulation. It&#39;s just <strong>storing</strong> and <strong>modifying data.</strong></p></blockquote><h2 id="view" tabindex="-1">View <a class="header-anchor" href="#view" aria-hidden="true">#</a></h2><h3 id="역할-2" tabindex="-1">역할 <a class="header-anchor" href="#역할-2" aria-hidden="true">#</a></h3><ol><li>UI</li><li>event listener <ol><li>controller 가 handler 등록할 수 있도록 해주는 binder</li></ol></li></ol><blockquote><p>Neither the controller nor the model should know anything about the DOM, HTML elements, CSS, or any of that. <strong>Anything relating to it should be in the view</strong>.</p></blockquote><p>pug 파일에 이미 작성된 내용은 일종의 View init에 포함된 내용</p><h1 id="케이스-고민" tabindex="-1">케이스 고민 <a class="header-anchor" href="#케이스-고민" aria-hidden="true">#</a></h1><h2 id="신규-페이지-생성시-기본적으로-들어가는-요소들" tabindex="-1">신규 페이지 생성시 기본적으로 들어가는 요소들 <a class="header-anchor" href="#신규-페이지-생성시-기본적으로-들어가는-요소들" aria-hidden="true">#</a></h2><p>view, page 분리</p><ol><li>PC, mobile에 따라 page에서 처리</li><li>view는 공통</li></ol><p>checkWebPage</p><p>initLoginModule</p><p><a href="https://stackoverflow.com/questions/43431550/async-await-class-constructor" target="_blank" rel="noreferrer">https://stackoverflow.com/questions/43431550/async-await-class-constructor</a></p>`,30),t=[o];function r(p,i,c,h,d,y){return l(),a("div",null,t)}const A=s(n,[["render",r]]);export{D as __pageData,A as default};
